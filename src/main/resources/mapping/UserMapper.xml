<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.entity.User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="HOBBY" property="hobby" jdbcType="VARCHAR" />
    <result column="GOODAT" property="goodat" jdbcType="VARCHAR" />
    <result column="GITHUBACCOUNT" property="githubaccount" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, PASSWORD, SEX, PHONE, EMAIL, HOBBY, GOODAT, GITHUBACCOUNT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from waitadrizzle_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <!--<select id="selectAllUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from waitadrizzle_user
  </select>-->
    <!--user登录-->
    <select id="loginUser" resultMap="BaseResultMap" parameterType="String">
      select
      <include refid="Base_Column_List" />
      from waitadrizzle_user where name = #{username} and password = #{password}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from waitadrizzle_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.User" >
    insert into waitadrizzle_user (ID, NAME, PASSWORD, 
      SEX, PHONE, EMAIL, 
      HOBBY, GOODAT, GITHUBACCOUNT
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{hobby,jdbcType=VARCHAR}, #{goodat,jdbcType=VARCHAR}, #{githubaccount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.User" >
    insert into waitadrizzle_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="hobby != null" >
        HOBBY,
      </if>
      <if test="goodat != null" >
        GOODAT,
      </if>
      <if test="githubaccount != null" >
        GITHUBACCOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="goodat != null" >
        #{goodat,jdbcType=VARCHAR},
      </if>
      <if test="githubaccount != null" >
        #{githubaccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.User" >
    update waitadrizzle_user
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        HOBBY = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="goodat != null" >
        GOODAT = #{goodat,jdbcType=VARCHAR},
      </if>
      <if test="githubaccount != null" >
        GITHUBACCOUNT = #{githubaccount,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.User" >
    update waitadrizzle_user
    set NAME = #{name,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      HOBBY = #{hobby,jdbcType=VARCHAR},
      GOODAT = #{goodat,jdbcType=VARCHAR},
      GITHUBACCOUNT = #{githubaccount,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>